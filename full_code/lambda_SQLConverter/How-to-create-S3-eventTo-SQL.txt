
Step 1 - 
Create 3 S3 buckets. 
  a. Source SQL BUcket name - example-381491837089
  b. Target Bucket name - output-381491837089
  c. Prompt Bucket name - prompt-buc-381491837089

Step 2 - 
Create a Role "Lambda-Role-for-S3-SQS" trusting Lambda with following policy-
    1. AmazonS3ReadOnlyAccess
    2. AWSLambdaSQSQueueExecutionRole
    3. AmazonS3ObjectLambdaExecutionRolePolicy
    4. Custom policy - 
        {
        "Version": "2012-10-17",
        "Statement": [
              {
                  "Sid": "VisualEditor0",
                  "Effect": "Allow",
                  "Action": "s3:PutObject",
                  "Resource": "arn:aws:s3:::output-381491837089/*"
              }
            ]
        }

Step 3  - Create SQS named myqueue and modify SQS policy like below -
// This will grant S3 to publish event in SQS


{
  "Version": "2012-10-17",
  "Id": "example-ID",
  "Statement": [
    {
      "Sid": "example-statement-ID",
      "Effect": "Allow",
      "Principal": {
        "Service": "s3.amazonaws.com"
      },
      "Action": "SQS:SendMessage",
      "Resource": "arn:aws:sqs:us-east-1:381491837089:myqueue",
      "Condition": {
        "StringEquals": {
          "aws:SourceAccount": "381491837089"
        },
        "ArnLike": {
          "aws:SourceArn": "arn:aws:s3:::example-381491837089"
        }
      }
    },
    {
      "Sid": "LambdaAccess",
      "Effect": "Allow",
      "Principal": {
        "AWS": "arn:aws:iam::381491837089:role/Lambda-Role-for-S3-SQS"
      },
      "Action": "SQS:*",
      "Resource": "arn:aws:sqs:us-east-1:381491837089:myqueue"
    }
  ]
}

Step 4 - 
S3 => Properties => Event Notification => Give SQS details and create event for all put objects in s3

Step 5 - 
Update Source SQL BUcket named - example-381491837089 S3 bucket policy -

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowS3ToLambdaRole",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::381491837089:role/Lambda-Role-for-S3-SQS"
            },
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::example-381491837089/*"
        }
    ]
}

Update Target Bucket name - output-381491837089 S3 bucket policy -

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowS3ToLambdaRole",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::381491837089:role/Lambda-Role-for-S3-SQS"
            },
            "Action": "s3:PutObject",
            "Resource": "arn:aws:s3:::output-381491837089/*"
        }
    ]
}

Update Prompt Bucket Policy - 

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowS3ToLambdaRole",
            "Effect": "Allow",
            "Principal": {
                "AWS": "arn:aws:iam::381491837089:role/Lambda-Role-for-S3-SQS"
            },
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::prompt-buc-381491837089/*"
        }
    ]
}

Step 6:

Deploy the Lambda function with following configuration - 
1. Environment variables - 
  a. PROMPT_BUCKET	prompt-buc-381491837089
  b. PROMPT_FILE	Prompt.txt
  c. QUEUE_URL	https://sqs.us-east-1.amazonaws.com/381491837089/myqueue
2. Timeout - 1 min 30 sec
3. With existing role - arn:aws:iam::381491837089:role/Lambda-Role-for-S3-SQS

